name: task
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: ^3.7.0

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
# Dependencies specify other packages that your package needs in order to work.
dependencies:
  # animate_do: Ready-to-use animation effects for UI elements.
  animate_do: ^3.3.4 
  # connectivity_plus: Check internet connectivity status (WiFi, Mobile, etc.).
  connectivity_plus: ^6.1.0 
  # dartz: Functional programming utilities like Either and Option.
  dartz: ^0.10.1 
  # device_preview: Preview your app on different device sizes during development.
  device_preview: ^1.2.0 
  # flutter: The core Flutter framework.
  flutter:
    sdk: flutter 
  # flutter_bloc: State management using the BLoC (Business Logic Component) pattern.
  flutter_bloc: ^8.1.6 
  # flutter_secure_storage: Securely store sensitive data on the device.
  flutter_secure_storage: ^9.2.4 
  # flutter_native_splash: Automatically generate a splash screen for your app.
  flutter_native_splash: ^2.4.2 
  # flutter_screenutil: Automatically adapt UI sizes to different screen sizes.
  flutter_screenutil: ^5.9.3 
  # flutter_svg: Display SVG images in Flutter apps.
  flutter_svg: ^2.0.9 
  # get_it: Dependency injection library for managing app dependencies.
  get_it: ^8.0.1 
  # supabase_flutter: Connect your app to Supabase database and services.
  supabase_flutter: ^2.8.1 
  # skeletonizer: Show skeleton loading effects while data is loading.
  skeletonizer: ^1.4.3 
  # cached_network_image: Load and cache images from the internet.
  cached_network_image: ^3.4.1 
  # awesome_dialog: Beautiful and easy-to-use dialog widgets.
  awesome_dialog: ^3.2.1 
  # carousel_slider: Create image or item sliders.
  carousel_slider: ^5.1.1 
  # equatable: Simplifies object comparison in Dart.
  equatable: ^2.0.7 
  # hive: Lightweight and fast local NoSQL database.
  hive: ^2.2.3 
  # hive_flutter: Hive integration for Flutter.
  hive_flutter: ^1.1.0 

  # cupertino_icons: iOS style icons for Flutter apps.
  cupertino_icons: ^1.0.8 

# Dev dependencies are packages needed only during development and testing.
dev_dependencies:
  # hive_generator: Generates code for Hive models.
  hive_generator: ^2.0.1 
  # build_runner: Tool for code generation.
  build_runner: ^2.4.7 
  # flutter_launcher_icons: Automatically generate app launcher icons.
  flutter_launcher_icons: ^0.14.4 
  # flutter_test: Testing library for Flutter apps.
  flutter_test:
    sdk: flutter 

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^5.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/images/
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
    # Arabic Font
    - family: Rubik
      fonts:
        - asset: assets/font/Rubik/Rubik-Bold.ttf
          weight: 700
        - asset: assets/font/Rubik/Rubik-BlackItalic.ttf
          weight: 500
        - asset: assets/font/Rubik/Rubik-Black.ttf
          weight: 400
    # English Font
    - family: DMSans
      fonts:
        - asset: assets/font/DM/DMSans_18pt-Bold.ttf
          weight: 700
        - asset: assets/font/DM/DMSans_18pt-BlackItalic.ttf
          weight: 500
        - asset: assets/font/DM/DMSans_18pt-Black.ttf
          weight: 400
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/to/font-from-package
# flutter_launcher_icons configuration for generating app icons.
flutter_launcher_icons:
  android: "ic_launcher"
  ios: true
  image_path: "assets/images/logo.png"
  adaptive_icon_foreground: "assets/images/logo.png" # Set the foreground image (same or different from image_path)
  adaptive_icon_background: "#FFFFFF"
  min_sdk_android: 21 # android min sdk min:16, default 21

# flutter_assets configuration for generating Dart asset references.
flutter_assets:
  assets_path: assets/images/
  output_path: lib/utility/
  filename: images_aseets.dart
  field_prefix: null
